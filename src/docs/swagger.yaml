openapi: 3.0.0
info:
  title: UnaHur Anti-Social API
  description: API para la red social UnaHur Anti-Social Net (MVP).
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local de desarrollo

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado correctamente

  /users/{id}:
    get:
      summary: Obtener usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
    delete:
      summary: Eliminar usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario eliminado

  /posts:
    get:
      summary: Obtener todos los posts
      responses:
        '200':
          description: Lista de posts obtenida
    post:
      summary: Crear un nuevo post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post creado correctamente

  /posts/{id}:
    get:
      summary: Obtener post por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post encontrado
        '404':
          description: Post no encontrado
    put:
      summary: Actualizar post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post actualizado
    delete:
      summary: Eliminar post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post eliminado

  /posts/{id}/images:
    post:
      summary: Agregar una imagen a un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImage'
      responses:
        '201':
          description: Imagen agregada al post
    delete:
      summary: Eliminar una imagen de un post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Imagen eliminada

  /posts/{id}/tags:
    get:
      summary: Obtener los tags asociados a un post
      parameters:
        - name: id
          in: path
          required: true
          description: ID del post
          schema:
            type: integer
      responses:
        '200':
          description: Lista de tags del post
        '500':
          description: Error al obtener los tags
    post:
      summary: Agregar uno o más tags a un post
      parameters:
        - name: id
          in: path
          required: true
          description: ID del post
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tagsId:
                  oneOf:
                    - type: integer
                    - type: array
                      items:
                        type: integer
      responses:
        '200':
          description: Tag/s añadido/s correctamente
        '500':
          description: Error al añadir el tag

  /tags:
    get:
      summary: Obtener todas las etiquetas
      responses:
        '200':
          description: Lista de tags
    post:
      summary: Crear una nueva etiqueta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          description: Tag creado correctamente

components:
  schemas:
    User:
      type: object
      properties:
        nickname:
          type: string
        mail:
          type: string

    Post:
      type: object
      properties:
        texto:
          type: string
        userId:
          type: integer

    PostImage:
      type: object
      properties:
        url:
          type: string

    Tag:
      type: object
      properties:
        nombre:
          type: string
